# Generated by CMake

if("${CMAKE_MAJOR_VERSION}.${CMAKE_MINOR_VERSION}" LESS 2.5)
   message(FATAL_ERROR "CMake >= 2.6.0 required")
endif()
cmake_policy(PUSH)
cmake_policy(VERSION 2.6)
#----------------------------------------------------------------
# Generated CMake target import file.
#----------------------------------------------------------------

# Commands may need to know the format version.
set(CMAKE_IMPORT_FILE_VERSION 1)

# Protect against multiple inclusion, which would fail when already imported targets are added once more.
set(_targetsDefined)
set(_targetsNotDefined)
set(_expectedTargets)
foreach(_expectedTarget Seastar::seastar Seastar::seastar_testing Seastar::seastar_perf_testing)
  list(APPEND _expectedTargets ${_expectedTarget})
  if(NOT TARGET ${_expectedTarget})
    list(APPEND _targetsNotDefined ${_expectedTarget})
  endif()
  if(TARGET ${_expectedTarget})
    list(APPEND _targetsDefined ${_expectedTarget})
  endif()
endforeach()
if("${_targetsDefined}" STREQUAL "${_expectedTargets}")
  unset(_targetsDefined)
  unset(_targetsNotDefined)
  unset(_expectedTargets)
  set(CMAKE_IMPORT_FILE_VERSION)
  cmake_policy(POP)
  return()
endif()
if(NOT "${_targetsDefined}" STREQUAL "")
  message(FATAL_ERROR "Some (but not all) targets in this export set were already defined.\nTargets Defined: ${_targetsDefined}\nTargets not yet defined: ${_targetsNotDefined}\n")
endif()
unset(_targetsDefined)
unset(_targetsNotDefined)
unset(_expectedTargets)


# Create imported target Seastar::seastar
add_library(Seastar::seastar STATIC IMPORTED)

set_target_properties(Seastar::seastar PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "SEASTAR_API_LEVEL=2"
  INTERFACE_COMPILE_OPTIONS "-std=gnu++17;-U_FORTIFY_SOURCE;-Wno-maybe-uninitialized;-DSEASTAR_SSTRING;-Wno-error=unused-result"
  INTERFACE_INCLUDE_DIRECTORIES "/home/work/feeds-seastar/seastar-20.05/seastar/include;/home/work/feeds-seastar/seastar-20.05/seastar/build/gen/include"
  INTERFACE_LINK_LIBRARIES "Boost::boost;Boost::program_options;Boost::thread;c-ares::c-ares;cryptopp::cryptopp;fmt::fmt;lz4::lz4;\$<LINK_ONLY:dl>;\$<LINK_ONLY:Boost::filesystem>;\$<LINK_ONLY:GnuTLS::gnutls>;\$<LINK_ONLY:StdAtomic::atomic>;\$<LINK_ONLY:StdFilesystem::filesystem>;\$<LINK_ONLY:lksctp-tools::lksctp-tools>;\$<LINK_ONLY:protobuf::libprotobuf>;\$<LINK_ONLY:rt::rt>;\$<LINK_ONLY:yaml-cpp::yaml-cpp>;\$<LINK_ONLY:Threads::Threads>;\$<LINK_ONLY:LinuxMembarrier::membarrier>;\$<LINK_ONLY:hwloc::hwloc>;\$<LINK_ONLY:numactl::numactl>"
)

# Create imported target Seastar::seastar_testing
add_library(Seastar::seastar_testing STATIC IMPORTED)

set_target_properties(Seastar::seastar_testing PROPERTIES
  INTERFACE_COMPILE_DEFINITIONS "BOOST_TEST_DYN_LINK"
  INTERFACE_LINK_LIBRARIES "Boost::unit_test_framework;Seastar::seastar"
)

# Create imported target Seastar::seastar_perf_testing
add_library(Seastar::seastar_perf_testing STATIC IMPORTED)

set_target_properties(Seastar::seastar_perf_testing PROPERTIES
  INTERFACE_LINK_LIBRARIES "Seastar::seastar"
)

# Import target "Seastar::seastar" for configuration "Release"
set_property(TARGET Seastar::seastar APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Seastar::seastar PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/work/feeds-seastar/seastar-20.05/seastar/build/libseastar.a"
  )

# Import target "Seastar::seastar_testing" for configuration "Release"
set_property(TARGET Seastar::seastar_testing APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Seastar::seastar_testing PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/work/feeds-seastar/seastar-20.05/seastar/build/libseastar_testing.a"
  )

# Import target "Seastar::seastar_perf_testing" for configuration "Release"
set_property(TARGET Seastar::seastar_perf_testing APPEND PROPERTY IMPORTED_CONFIGURATIONS RELEASE)
set_target_properties(Seastar::seastar_perf_testing PROPERTIES
  IMPORTED_LINK_INTERFACE_LANGUAGES_RELEASE "CXX"
  IMPORTED_LOCATION_RELEASE "/home/work/feeds-seastar/seastar-20.05/seastar/build/libseastar_perf_testing.a"
  )

# This file does not depend on other imported targets which have
# been exported from the same project but in a separate export set.

# Commands beyond this point should not need to know the version.
set(CMAKE_IMPORT_FILE_VERSION)
cmake_policy(POP)
